p: Project = input;

proj: output top(5000) of string weight int;
methods : array of string;

visit(p, visitor {	
	before n: CodeRepository -> {
		snapshot := getsnapshot(n);
		foreach (i: int; def(snapshot[i]))
			visit(snapshot[i]);
		stop;
	}
	
	before node: Namespace -> {
		methods = new(methods, 5, "");
    }
	
	before ex: Expression -> {
		if (ex.kind == ExpressionKind.METHODCALL) {
			sig := ex.method;	
		#foreach (i: int; def(ex.method_args[i])) sig += ex.method_args[i].variable + ", ";
		
		for(i := 0; i < len(methods) ; i++) {
			if(i == len(methods) - 1) 
				methods[i] = sig;
			else 
				methods[i] = methods[i+1];
		}
		patt := "";
		if(methods[0] == methods[1] && methods[1] == methods[2]) ;
		else {
			foreach(i : int; def(methods[i]))
			patt += methods[i] + ", " ;
		}
		proj << patt weight 1;
		#proj << sig weight 1; 
		}	
	}
});
	

